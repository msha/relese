---
import type { Release, Translations, Locale } from '../types/index.js';
import { formatDate } from '../i18n/utils.js';
import { generateReleaseId } from '../data/utils.js';

export interface Props {
  release: Release;
  translations: Translations;
  locale: Locale;
}

const { release, translations, locale } = Astro.props;

const releaseDate = new Date(release.date);
const formattedDate = formatDate(releaseDate, locale);
const releaseId = generateReleaseId(release.version);

// Get type-specific styling
const getTypeColor = (type: string) => {
  switch (type) {
    case 'major':
      return '#ef4444'; // Red
    case 'minor':
      return '#8b5cf6'; // Purple
    case 'patch':
      return '#10b981'; // Emerald
    case 'hotfix':
      return '#f59e0b'; // Amber
    case 'initial':
      return '#6366f1'; // Indigo
    default:
      return '#8b5cf6';
  }
};

const typeColor = getTypeColor(release.type);
---

<section class="hero" id={releaseId} data-release={release.version} aria-labelledby="hero-title">
  <div class="hero__card glass">
    <div class="hero__header">
      <div class="hero__badge-container">
        <span class="hero__badge" style={`--type-color: ${typeColor}`}>
          {translations.currentVersion.latest}
        </span>
        <span class="hero__type-chip" style={`--type-color: ${typeColor}`}>
          {translations.releaseTypes[release.type]}
        </span>
      </div>

      <div class="hero__version-info">
        <h2 id="hero-title" class="hero__version">
          v{release.version}
        </h2>
        <p class="hero__date">
          {translations.currentVersion.releasedOn} {formattedDate}
        </p>
      </div>
    </div>

    {release.highlights.length > 0 && (
      <div class="hero__highlights" id={`release-${release.version.replace(/\./g, '-')}-highlights`} data-section={`release-${release.version.replace(/\./g, '-')}-highlights`}>
        <h3 class="hero__highlights-title">
          {translations.sections.highlights}
        </h3>
        <ul class="hero__highlights-list">
          {release.highlights.map((highlight, index) => (
            <li key={index} class="hero__highlight-item">
              <span class="hero__highlight-icon" aria-hidden="true">âœ¨</span>
              <span class="hero__highlight-text">{highlight}</span>
            </li>
          ))}
        </ul>
      </div>
    )}

    <!-- Ambient gradient background -->
    <div class="hero__gradient" aria-hidden="true"></div>
  </div>
</section>

<style>
  .hero {
    margin-bottom: var(--spacing-2xl);
  }

  .hero__card {
    position: relative;
    border-radius: var(--radius-xl);
    padding: var(--spacing-2xl);
    overflow: hidden;
    transition: all var(--transition-normal);
  }

  .hero__card:hover {
    box-shadow:
      var(--glass-shadow),
      0 20px 40px rgba(0, 0, 0, 0.2);
  }

  .hero__header {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-lg);
    margin-bottom: var(--spacing-xl);
  }

  .hero__badge-container {
    display: flex;
    align-items: center;
    gap: var(--spacing-md);
    flex-wrap: wrap;
  }

  .hero__badge {
    display: inline-flex;
    align-items: center;
    padding: var(--spacing-sm) var(--spacing-lg);
    background: linear-gradient(135deg, var(--type-color), color-mix(in srgb, var(--type-color) 70%, transparent));
    color: white;
    border-radius: var(--radius-lg);
    font-size: var(--font-size-sm);
    font-weight: var(--font-weight-bold);
    text-transform: uppercase;
    letter-spacing: 0.5px;
    box-shadow: 0 4px 12px color-mix(in srgb, var(--type-color) 30%, transparent);
  }

  .hero__type-chip {
    display: inline-flex;
    align-items: center;
    padding: var(--spacing-xs) var(--spacing-md);
    background: color-mix(in srgb, var(--type-color) 20%, transparent);
    color: var(--type-color);
    border: 1px solid color-mix(in srgb, var(--type-color) 50%, transparent);
    border-radius: var(--radius-md);
    font-size: var(--font-size-xs);
    font-weight: var(--font-weight-medium);
    text-transform: capitalize;
  }

  .hero__version-info {
    flex: 1;
  }

  .hero__version {
    font-size: var(--font-size-4xl);
    font-weight: var(--font-weight-bold);
    color: var(--text-primary);
    margin: 0 0 var(--spacing-sm) 0;
    line-height: var(--line-height-tight);
    background: linear-gradient(135deg, var(--text-primary), var(--text-secondary));
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  .hero__date {
    font-size: var(--font-size-lg);
    color: var(--text-secondary);
    margin: 0;
    font-weight: var(--font-weight-medium);
  }

  .hero__highlights {
    position: relative;
    z-index: 2;
  }

  .hero__highlights-title {
    font-size: var(--font-size-xl);
    font-weight: var(--font-weight-bold);
    color: var(--text-primary);
    margin: 0 0 var(--spacing-lg) 0;
    background: var(--gradient-text-highlights);
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  .hero__highlights-list {
    list-style: none;
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: column;
    gap: var(--spacing-md);
  }

  .hero__highlight-item {
    display: flex;
    align-items: flex-start;
    gap: var(--spacing-md);
    padding: var(--spacing-md);
    background: rgba(255, 255, 255, 0.05);
    border-radius: var(--radius-md);
    border: 1px solid rgba(255, 255, 255, 0.1);
    transition: all var(--transition-fast);
  }

  .hero__highlight-item:hover {
    background: rgba(255, 255, 255, 0.08);
    border-color: rgba(255, 255, 255, 0.2);
  }

  .hero__highlight-icon {
    flex-shrink: 0;
    font-size: var(--font-size-lg);
    margin-top: 2px;
  }

  .hero__highlight-text {
    flex: 1;
    font-size: var(--font-size-lg);
    line-height: var(--line-height-relaxed);
    color: var(--text-primary);
    font-weight: var(--font-weight-medium);
  }

  .hero__gradient {
    position: absolute;
    top: 0;
    right: 0;
    width: 60%;
    height: 100%;
    background: radial-gradient(
      circle at 80% 20%,
      color-mix(in srgb, var(--accent-purple) 30%, transparent) 0%,
      color-mix(in srgb, var(--accent-indigo) 20%, transparent) 50%,
      transparent 100%
    );
    pointer-events: none;
    z-index: 1;
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .hero__card {
      padding: var(--spacing-xl);
    }

    .hero__header {
      gap: var(--spacing-md);
    }

    .hero__badge-container {
      gap: var(--spacing-sm);
    }

    .hero__version {
      font-size: var(--font-size-3xl);
    }

    .hero__date {
      font-size: var(--font-size-base);
    }

    .hero__highlights-title {
      font-size: var(--font-size-lg);
    }

    .hero__highlight-text {
      font-size: var(--font-size-base);
    }

    .hero__gradient {
      width: 80%;
    }
  }

  @media (max-width: 480px) {
    .hero__card {
      padding: var(--spacing-lg);
    }

    .hero__version {
      font-size: var(--font-size-2xl);
    }

    .hero__badge-container {
      flex-direction: column;
      align-items: flex-start;
    }
  }

  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    .hero__card {
      transition: none;
    }

    .hero__card:hover {
      transform: none;
    }

    .hero__highlight-item:hover {
      transform: none;
    }
  }

  /* High contrast mode */
  @media (prefers-contrast: high) {
    .hero__badge {
      background: var(--type-color);
      border: 2px solid white;
    }

    .hero__type-chip {
      border-width: 2px;
    }

    .hero__highlight-item {
      border-width: 2px;
    }
  }
</style>